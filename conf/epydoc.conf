# Copyright 2007 by Adrian Hare and Kenneth Barber. All rights reserved.

#    This file is part of OWLSugar.

#    OWLSugar is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    OWLSugar is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

# Version: $Rev: 180 $

[epydoc] # Epydoc section marker (required by ConfigParser)

# modules
#   The list of objects to document.  Objects can be named using
#   dotted names, module filenames, or package directory names.
#   Alases for this option include "objects" and "values".
modules: src/owlsugar

# output
#   The type of output that should be generated.  Should be one
#   of: html, text, latex, dvi, ps, pdf.
output: html

# target
#   The path to the output directory.  May be relative or absolute.
target: doc/api

# docformat
#   The default markup language for docstrings, for modules that do
#   not define __docformat__.  Defaults to epytext.
#docformat: epytext

# css
#   The CSS stylesheet for HTML output.  Can be the name of a builtin
#   stylesheet, or the name of a file.
#css: white

# name
#   The documented project's name.
name: OWL Sugar Library

# url
#   The documented project's URL.
#url: http://some.project/

# link
#   HTML code for the project link in the navigation bar.  If left
#   unspecified, the project link will be generated based on the
#   project's name and URL.
#link: <a href="somewhere">My Cool Project</a>

# top
#   The "top" page for the documentation.  Can be a URL, the name
#   of a module or class, or one of the special names "trees.html",
#   "indices.html", or "help.html"
#top: os.path

# help
#   An alternative help file.  The named file should contain the
#   body of an HTML file; navigation bars will be added to it.
#help: my_helpfile.html

# frames
#   Whether or not to include a frames-based table of contents.
frames: yes

# private
#   Whether or not to inclue private variables.  (Even if included,
#   private variables will be hidden by default.)
private: yes

# imports
#   Whether or not to list each module's imports.
imports: yes

# verbosity
#   An integer indicating how verbose epydoc should be.  The default
#   value is 0; negative values will supress warnings and errors;
#   positive values will give more verbose output.
verbosity: 0

# parse
#   Whether or not parsing should be used to examine objects.
parse: yes

# introspect
#   Whether or not introspection should be used to examine objects.
introspect: yes

# graph
#   The list of graph types that should be automatically included
#   in the output.  Graphs are generated using the Graphviz "dot"
#   executable.  Graph types include: "classtree", "callgraph",
#   "umlclass".  Use "all" to include all graph types
#graph: all

# dotpath
#   The path to the Graphviz "dot" executable, used to generate
#   graphs.
dotpath: /usr/bin/dot

# sourcecode
#   Whether or not to include syntax highlighted source code in
#   the output (HTML only).
sourcecode: yes

# pstat
#   The name of one or more pstat files (generated by the profile
#   or hotshot module).  These are used to generate call graphs.
#pstat: profile.out

# separate-classes
#   Whether each class should be listed in its own section when
#   generating LaTeX or PDF output.
separate-classes: no

# The format for showing inheritance objects.
# It should be one of: 'grouped', 'listed', 'included'.
inheritance: included